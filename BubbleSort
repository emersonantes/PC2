#include <stdio.h>

int main() {
    // Declaração e inicialização do vetor com valores desordenados
    int vetor[] = {64, 34, 25, 12, 22, 11, 90};
    
    // Determina o número de elementos no vetor
    int tamanho = sizeof(vetor) / sizeof(vetor[0]);

    // Exibe o vetor antes da ordenação
    printf("Vetor antes da ordenação:\n");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]); // Imprime cada elemento do vetor
    }
    printf("\n"); // Linha em branco para melhor formatação

    // Algoritmo de Bubble Sort
    // O Bubble Sort compara cada par de elementos adjacentes e os troca se estiverem na ordem errada
    for (int i = 0; i < tamanho - 1; i++) {
        // A cada iteração, o maior elemento da parte não ordenada é movido para o final
        for (int j = 0; j < tamanho - i - 1; j++) {
            // Compara elementos adjacentes
            if (vetor[j] > vetor[j + 1]) {
                // Se o elemento atual é maior que o próximo, troca-os
                int temp = vetor[j];       // Armazena o elemento atual em uma variável temporária
                vetor[j] = vetor[j + 1];   // Substitui o elemento atual pelo próximo
                vetor[j + 1] = temp;       // Move o elemento armazenado temporariamente para a posição do próximo
            }
        }
    }

    // Exibe o vetor depois da ordenação
    printf("Vetor depois da ordenação:\n");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]); // Imprime cada elemento do vetor ordenado
    }
    printf("\n"); // Linha em branco para melhor formatação

    return 0; // Termina o programa com sucesso
}
